정기 멘토 참석 회의 9 (2024.11.18)
2024.11.18 월 오후 4:10 ・ 51분 51초
김민석


참석자 1 00:02
안녕하세요. 안녕하세요

참석자 1 00:10
저번에 이번 주 회의 얘기를 안 해서 저도 약간 깜빡하고 있었는데 간단하게 공 진행 상황 진행 상황 공유만 하고 넘어가는데 지금 완료 일정을 조금 신경 써주시긴 해야 되거든요.
이거 저희 사업도 온전하게 이제 전달이 되려면은 어느 정도는 좀 일찍 끝나는 게 필요해서 그것만 좀 인지해 주시고 일주일 동안 어떤 거 작업 진행된 거 있는지 조금 소개해 주시면 감사하겠습니다.

참석자 1 00:48
네 주욱 씨부터 할까요?

참석자 2 00:51
네 저부터 하겠습니다.

참석자 2 01:01
센터님 공유 권한 하나 해시

참석자 1 01:04
허용했습니다.

참석자 2 01:11
네 지금 화면 잘 보이시나요? 네 저는 이제 AI 모델 논문까지 다 개발하는 거랑 논문까지 작성 완료했고 이제 제가 해야 되는 거는 AI 실시간으로 데이터를 불러와서 전처리하고 AI 모델에 돌려서 민석 님이랑 이제 같이 백엔드 AI가 돌아가는 로직 짜는 업무만 나왔습니다.
그래가지고 이번 주 진행 상황은 우선 파이썬으로 코드는 다 짰고요.
그리고 오늘 저녁까지 민석 님이 이거 이외에 도커 작업하시는데 또 요청 주신 사항이 있으셔가지고 그것까지 오늘 밤까지 전달드릴 예정입니다.
출력은

참석자 1 02:01
하나 여쭤볼 게 있는데 저번에 제가 지적한 사항 있잖아요.
그 구간 단위로 레이블링 다시 하는 거

참석자 2 02:07
네 맞습니다.

참석자 1 02:09
그거 반영이 좀 됐나요? 학습할 때 그러니까 모델 모델 PTH 저기에 그게 좀 반영이 돼 있어야 되는데

참석자 2 02:21
예를 들어서 구간을 720으로 하면은 직전 720개 직전 719개까지 이제 비정상으로 정의하고 만약에 1440이면 직전 1439개를 비정상으로 정의하는 게 필요하다는 말씀이신가요?

참석자 1 02:39
네네 그거는 제가 저번에 말씀드렸고 그때 그래프 같이 보면서 이제 그거를 로직으로 레이블링 정의를 했잖아요.

참석자 2 02:51
네 맞습니다.

참석자 1 02:52
그러다 보니까 중간중간 이상치인 게 조금 보이는데도 빠지는 구간들이 있었잖아요.
레이블링 데이.

참석자 2 03:00
네 맞습니다.

참석자 1 03:02
그래서 그거를 조금 보완할 수 있는 그거를 조금 제가 요청을 드렸는데 사실 다른 거는 다 괜찮거든요.
하루 전에 예측을 하건 이틀 전에 다 좋은데 그거는 이제 이거 학습될 때 꼭 좀 필요한 거라서 한번

참석자 2 03:26
네 알겠습니다. 그럼 제가 그거는 빨리 해서 진행되는 대로 다시 공유드리겠습니다.

참석자 1 03:33
네 그거는 근데 모델 파일만 바꾸면 되니까 그쵸? 네 맞습니다.
레이블링 다시 정리해서 모델 파일만 바꾸고 이제 또 실험 실험 결과도 그걸로 논문 거 말고 새로 만들어야 될 것 같거든요.
비정상의 데이터가 다시 정의가 되기 때문에 논문을 다시 쓸 필요는 없고

참석자 2 03:54
네 이해했습니다.

참석자 1 03:55
네 그래서 그렇게 조금 그것만 조금 신경 써주시고 제가 의도한 그거로 딱 작업은 된 것 같아요.
저거 AI 로직 그래서 모델 PTH 모델을 이제 새로 데이터 학습한 걸로 바꾸는 작업을 조금 신경 써서

참석자 2 04:13
네

참석자 1 04:14
해 주시면 될 것 같습니다.

참석자 2 04:16
네 그거는 내일 밤까지 마무리해서 공유해 드리도록 하겠습니다.

참석자 1 04:20
네 그리고 그게 로직으로 조금 완성되면 좋은 게 제가 추가 데이터 한번 전화해볼 거거든요.
혹시 더 있는지 네 감사합니다. 있으면 그것도 반영이 돼야 되니까 로직으로 한번 그게 구간으로 어떻게 정의가 될 수 있을지 왜냐하면 이게 나중에 데이터 디바이스가 더 늘어나면은 그때마다 이거 구간을 새로 정해줄 순 없잖아요.

참석자 2 04:46
네 맞습니다.

참석자 1 04:48
그래서 예를 들면은 이게 떨어지는 구간이 나타날 때랑 그전까지의 모든 거를 모든 구간의 데이터를 비정상으로 정의를 해서 이제 그거 가지고 XY 만든다든지 그런 식으로 네 알겠습니다.
이해했습니다. 조금 어려울 것 같긴 한데 근데 이게 안 되면은 사실 정합성이 많이 깨지거든요.
프로젝트가 왜냐하면 이 AI 모델 자체 비정상 패턴인데 정상인 게 많이 들어가게 되는 거잖아요.

참석자 2 05:19
네 맞습니다. 네네 그것 때문에 네 알겠습니다.

참석자 1 05:23
그거 신경 써주시고 다른 부분은 됐습니다.

참석자 2 05:26
네 저는 여기까지입니다. 그리고 민석 님 제가 오늘 밤까지 이 코드랑 도커는 정리해서 공유드리겠습니다.
네 저는 이상입니다.

참석자 1 05:39
민성 님 바로 해 주실래요? 네

참석자 3 05:49
보이시나요?

참석자 3 05:54
제가 저번 회의 녹음된 거 듣고 나서 일단은 제가 도커를 아예 이번에 처음 해보는 거라서 그거 어떻게 어떤 정보가 필요하고 뭘 만들어야 되는지 그거를 좀 정하는데 좀 헤매는 데 좀 시간을 많이 먹었고 그러고 이거를 주말 동안 썼는데 일단 두 가지를 좀 구상을 했거든요.
도커 컨테이너 어떻게 할 건지랑 API 엔드 포인트 어떤 거를 두면 좋을지 이거는 뭐 제이슨이나 이런 포맷이나 파라미터 어떻게 해줄지 그런 거 자세하게 안 적었는데 어떤 거 있으면 저 최대한 쥐어 안에서 좀 나열을 했고요.
일단 그러면 그 컨테이너 제가 이게 좀 이해한 게 맞는지 좀 봐주시면 좋을 것 같습니다.
그거 저희가 시스템을 두 가지가 필요하잖아요. 이게 이 AI 모델을 통합하는 거랑 이 데시보드 시스템이랑 이 두 가지가 필요한데 그러면 컨테이너 2개를 만들어서 그 두 개가 내부에서 이렇게 통신한다고 보면 될까요?

참석자 1 07:10
어

참석자 1 07:15
원래 조금 더 쪼개기도 하는데 지금은 이렇게 하는 게 최선일 것 같아요.
왜냐하면 엄청 이 볼륨이 크지도 않고 예를 들어서 이제 정석적으로 말씀을 드리면 일단은 넥스트 제이스 하는 쪽은 이제 컨테이너 하나가 나오고요.
원래는 AI 모델 쪽에서 AI 모델 서빙이라고 해서 모델의 추론을 가속화하거나 로드 밸런싱 이런 걸 하기 위해서 컨테이너를 하나 더 빼줘요.

참석자 3 07:45
최적화하는 건가요?

참석자 1 07:47
네 최적화입니다. 최적화 그거를 네 그거를 도커로 따로 빼고

참석자 3 07:56
네

참석자 1 07:57
이런 식으로 하는데 이번 프로젝트에서는 굳이 필요 없을 것 같아요.
그래서 지금 있는 걸로 하고 근데 왜냐하면 여러분들이 정석은 알고 가야 되잖아요.
어떻게 해야 하는지 그래서 보통은 AI 모델 서빙이라는 게 하나 있고 그 서빙에서 나온 값을 어떤 통제하거나 혹은 DB 값이 있거나 하면은 그걸 이제 데이터를 불러오는 파트나 그런 백엔드를 하나 묶어서 만약에 이런 시스템이면 정석은 3개로 해요.
그래서 그러니까 지금 페이스 API랑 넥스 JS 이렇게 2개가 있잖아요.
저 1번이 2개가 되는 거죠. 하나는 모델 서빙 하나는

참석자 3 08:33
네 알겠습니다.

참석자 1 08:35
좀 이해되죠. 근데 지금은 그냥 통합으로 할 겁니다.
컨테이너 2개로

참석자 3 08:39
네 그러면 이번에는 이번에 저희 프로젝트에서는 그 서빙은 아예 안 들어간 건가요?

참석자 1 08:45
예예예 필요가 없어요. 사실 그러니까 여러분들도 이거를 좀 알아두시면 좋은데 솔직히 정석으로 하려면 되게 많아요.
쿠버네티스도 있고 컨테이너 오케스트레이션이라고 해가지고 뭐 하는 거랑 클라우드에서도 CICD나 다 있거든요.
네 근데 프로젝트 규모에 따라서 스펙을 잘 정의하고 시작하는 것도 중요하고 이제 여러분들이 할 수 있는 범위 내에서 목표를 정하는 거 이런 거에 대한 개념이 여러분들이 있으면 나중에 프로젝트 구상을 하실 때도 좀 과하게 막 목표를 잡거나 혹은 허접하게 잡거나 이런 게 많이 없으실 거예요.

참석자 3 09:23
네

참석자 1 09:24
그래서 제가 정석적인 건 다 말씀을 드리겠지만 지금은 거의 최소 단위에서 하고 있다는 거를 이해하시고 하면은 또 또 나중에 프로젝트 하실 때나 이럴 때 또 많이 도움이 되지 않을까 싶거든요.
근데 어쨌든 이 두 개로 하고 서빙은 빼는 겁니다.

참석자 3 09:42
네 알겠습니다. 그리고 그러면 일단 크게 보면 패스트 API의 컨테이너 l은 주영 님이 전처리 코드랑 그 모델 코드 두 개로 크게 보면 두 개로 해서 그냥 넣는다고 보면 되겠죠.

참석자 1 10:01
GPU 빼죠. GPU 사용 여부 돼 있는데 네 안 들어가도 되거든요.
이거 이미지 뭐 하는 것도 아니고

참석자 3 10:08
그 모델에서 혹시 GPU 사용하고 이런 게 있나요?

참석자 1 10:12
원래는 있어요. 원래는 다 해야 돼요. 원래는 하는데 우리 모델에서는 지금 테이블 데이터를 타임 시리즈로 하는 거기 때문에 실제로 우리가 쓰는 파라미터도 제가 알기로 한 만 개 정도밖에 안 되거든요.
네 근데 요 GPU 쓰는 거는 기본 한 10만 개 이상 됐을 때 보통 많이 쓰고

참석자 3 10:31
아 네

참석자 1 10:32
일반적으로 타임 시리즈 할 때는 잘 안 쓰긴 해요.

참석자 3 10:36
이게 제가 원래는 이게 어떤 게 필요한 구동 도커에서 어떤 모델을 돌리려면 어떤 게 어느 정도까지 필요할지를 몰라서 일단 주영 님한테 완전 아무것도 안 깔려 있는 컴퓨터에서 이 모델을 어떻게 돌리려면 뭐가 필요한지 정리해 달라 이렇게 요청을 드렸거든요.
저번 주에 그렇게 했는데 찾아보다 보니까 AI는 통합을 할 때 GPU 사용할 경우에는 또 이거를 도커 컨테이너 만들 때 붙여야 돼요.
네 맞아요. 하더라고요. 그럼 저희는 필요 없이 그냥 종속성 라이브러리나 이런 것만 보면 되는 거죠.

참석자 1 11:15
네네네. 그래서 알고만 있으면 돼요. 이런 거를 만약에 나중에 이미지 할 때는 붙여야 된다 이런 사실을 알고만 있으면 돼요.
붙이는 거는 차서 면 다 나오니까

참석자 3 11:25
네네 그러면 이거는 주영 님이랑 하면 될 것 같고 저희 근데 그러면 720개 시퀀스 720개 값 불러오는 건 고정인 거죠.

참석자 1 11:41
이거 근데 지금 데이터가 많지 않아서 저는 이틀 3일도 생각은 했거든요.
근데 720개 하는 게 좋을 것 같아요.

참석자 3 11:49
그러면 그 구간을 720개 구간을 따로 파라미터로 막고 이렇게 하지 않는 거죠.
그냥 고정으로

참석자 1 11:58
그렇게 하면 모델을 여러 개 세팅을 해야 돼서 투마츠.

참석자 3 12:03
네. 그러면 API로 사용할 때는 그냥 이거는 따로 안 받고 720개 고정으로 돌아간다고 보면 되겠죠.
네. 그리고 이거는 제가 이거 확인 그냥 잘 몰라가지고 이거를 API on API를 모델에 넣는 거 말고도 넥스트에서 그 데시보드로 나타낼 때 원래 데이터 패턴도 원래 데이터 패턴도 이렇게 시각화하는 게 있었거든요.
근데 이거를 하려면 오든 API를 호출해야 되는데 이거 찾아보니까 JS에서 바로 베스트 그쪽에 요청을 하면 보안상 이게 기본적으로 막아놓는 경우가 많다고 하더라고요.
그래서

참석자 1 12:54
네 원래 원래 다 그래요.

참석자 3 12:56
cors라고 이게 정확 저도 이거를 처음 알아가지고

참석자 1 13:01
그래그러니까 API 키가 있거든요. 네 그거를 그냥 정의만 해주면 돼요.
크게 막 어려운 건 아니에요.

참석자 3 13:10
제가 근데 쳐다봤을 때는 그래서 JS에서는 프록시 API로 만들어줘 가지고 여기에 접근할 수 있는 API로 만들어야 된다 이렇게 했는데 그렇게 해야 될 거야 아니면

참석자 1 13:25
무슨 말인지 알겠다 그러면 차라리 백엔드에서 받아서 주는 게 좋지 않아요.

참석자 3 13:31
네 그러면 프록시 API를 만드는 게 맞다는 거죠.

참석자 1 13:36
아니 아니 그러니까 그 그러니까 지금 페이스 API 컨테이너에서 네 네 그 말이죠.
그러니까 페이스 API 컨테이너에서 받아서 하는 거는 지금 파이썬 다 짜져 있잖아요.
주혁 씨 그렇죠

참석자 2 13:52
네 맞습니다.

참석자 1 13:54
그거를 백엔드에서 받아가지고 주는 그거를 하면 되잖아요.
프론트로 주면 되잖아요. 그러면 편하잖아요.

참석자 3 14:06
AI 근데 모델에 들어가는 거 말고도 별개로 모델에 들어가는 걸 그대로 주는 게 아니라 기존 센서 데이터를 넥스트에서 아마 가져와야 될 텐데 그 오든 API를 바로 요청을 못하니까 제가 대신 사용할 수 있는 API를 만든다는 개념이었는데 그렇게 보면 될까요?

참석자 1 14:32
얼추 비슷한데 그러니까 제가 이해하는 거로는 지금 파이썬에서 받아오는 건 주혁 씨가 딱 코드가 있잖아요.

참석자 2 14:40
네 맞습니다.

참석자 1 14:41
그러니까 그거를 페이스 API에서 구현을 해서 그러면 그 API로 이제 다시 보낼 수 있잖아요.
프론트로

참석자 3 14:48
네네

참석자 1 14:49
그러니까 그 말이 그 말인 것 같긴 한데 좀 간단하게 설명하면 이건 것 같고

참석자 3 14:54
네

참석자 1 14:55
그게 그렇게 하면 되겠죠. 네네

참석자 3 15:01
그리고 그러면

참석자 3 15:08
이거를 한번 묻고 싶었는데 아마 이거는 영찬 님이나 민수 님하고 얘기를 해야 될 것 같은데 원래는 그냥 자정마다 돌아간다고 이렇게 봤잖아요.
근데 관리자 기능이 조금 애매했던 것 같은데 관리자 기능을 아예 이거 몇 시로 정해가지고 정하는 기능이어가지고 뭐 예를 들어서 새벽 3시에 돌아가도록 정해놓고 그런 걸로 해도 될까요?

참석자 1 15:41
제가 먼저 얘기하자면은 이거 원래 이렇게 돌아가는 게 아니라 그러니까 일자 설정하거나 하면은 바로 그냥 그게 데시보드 나오면서 세팅되도록 그렇게 얘기하지 않았나요?

참석자 3 15:56
근데 그 주기적으로 돌아간다고 아마 처음에 계획이 돼 있어서

참석자 1 16:01
처음에는 계획이 그런데 제가 이거 우리 이제 같이 만들고 회의하다 보니까 일자 설정하면은 그 기관 거 받아서 모니터링 대시보드 보여주고 그거에 대해서 이제 예측 결과 나오고 요걸로 했던 것 같은데 맞죠 여러분들

참석자 4 16:19
그 기능도 포함돼 있긴

참석자 1 16:21
그거 주기적으로 돌리는 거

참석자 4 16:24
주기적으로 돌리는 거를 기본으로 하고 그 기간 설정을 또 따로 기능을 만드는 걸로

참석자 1 16:31
제 생각에는 이런 식으로 하면 근데 맞네 주기적으로 돌리는 게 있어야 이제 알림이나 이런 모니터링이 가능하긴 하겠네.

참석자 1 16:46
그러면 그거를 이제 몇 시에 설정할지 막 이런 거를 관리자 기능으로 넣는다.
조금 어려울 것 같은데 이거 어떻게 제가 봤을 때는 이게 주기적으로 넣는 거는 이 시스템에서 굉장히 좋은 기능이에요.
그러면은 예를 들어 2시간마다 한 번 돌아가게 한다든지 그래서 만약에 탐지가 됐다 그러면 알림 준다 이런 식이거든요.
그러면은 그 주기를 관리자 기능에서 설정할 수 있도록 이런 것도 가능하긴 하겠네.

참석자 3 17:22
제가 원래는 매일 자정마다 돌아간다고 고정으로 생각해보다가 API 이거를 구상해보다가 API 엔드 포인트로 생각해 보면 뭐 시점을 주는 거를 시점을 고정해놓고 하기보다는 요청할 때 시점을 같이 파라미터로 놓고 요청할 수 하는 게 더 좋다고 봐서 근데 그럴 거면 차라리 시점을 변경할 수 있게 하는 게 좋을 거라고 생각해서 제가 이거를 생각했거든요.

참석자 1 17:55
그 아 그러니까 근데 자정마다 그러니까 예를 들어 저거 예측 일정이라고 하는 건 자정마다 아니면 몇 시마다 이런 거잖아요.
근데 하루에 한 번은 좀 약한 것 같거든요.

참석자 3 18:06
네

참석자 1 18:07
그래서 제가 봤을 때는 그거를 이제 1시간 이상으로 일단은 채솟값 주고 그 주기를 예측 주기를 설정할 수 있도록 네 그렇게 하는 게 한시간마다 한 번 돌아간다고 이게 문제가 생길 거 이 하나도 없으니까 시스템 부하도 걸릴 거고

참석자 3 18:24
그러면 1시간마다 한다면 생각 제가 이해한 게 맞는지 알고 싶은데 그 만약에 1시간이면 12시면은 이전 전날 12시까지 그 결과가 나오고 그다음에 1시에는 또 전날 1시까지 해서 이렇게 계속 나오는 거죠.
네

참석자 1 18:45
만약에 결측치가 없다면 그래서 1시간 주기가 이제 최솟값이고 최대를 막 한 12시간 정도로 해가지고 관리자 페이지에서 사용자가 설정할 수 있게 하는 게 있고 아니면 그냥 주기를 여러분들이 그냥 세팅해놓고 하면은 구현은 편할 텐데 이거는 그냥 해보세요.
뭐 어려운 건 아니니까 주기를 관리자가 할 수 있도록 관리자 페이지 너무 휑해도 좀 그러니까 보통 관리자 페이지에 사용자 계정 컨트롤하고 이런 거잖아요.

참석자 3 19:17
네

참석자 1 19:18
근데 거기다가 저런 간단한 기능 하나 들어가면 좋을 것 같긴 하거든요.

참석자 3 19:29
그러면 엔드 포인트 이거를 볼까요? 이게 아직은 구상 중이긴 한데 이거 자세하게는 아직 안 하고 계속 최대한 뭐가 필요할지를 계속 생각해 봤거든요.
일단은 이렇게 하면 될까요? 그거 센서 아이디 등록해가지고 그 등록된 센서 아이디에서만 판단을 하게

참석자 1 19:57
센서

참석자 3 19:59
네 그러니까 여수 1번 등 아이디 넣어서 등록하고 그러면 이제 여수 1번으로 요청할 수 있는 거고 여수 1번 2번 3번 이렇게 등록돼 있으면 모든 데이터 조회하면 1번 2번 3번 3

참석자 1 20:16
근데 이거는 이거는 조금 구이이긴 해요. 제가 봤을 때는 왜냐하면 센서 디바이스 아이디가 다 오른쪽에 정의가 돼 있잖아요.
그러니까 이거는 약간 조금 개발하면서 너무 기능적으로 조금 어떻게 보면 엄격히 리스트릭하다고 표현을 하는데 제 생각에는 투머치인 것 같긴 하거든요.
지금 프로젝트에서

참석자 3 20:41
따로 등록을 안 하고 그냥 요청할 때마다 그냥 아이디를 요청하면

참석자 1 20:47
근데 왜냐하면은 센서가 그쪽에 다 등록이 돼 있잖아.
모든 쪽에

참석자 3 20:53
그 아이디마다 또 보안 정보가 또 같나요? 그거를 아직 확인을 못했는데

참석자 1 21:00
보안 정보요? 그건 저도 모르는데 주혁 씨 알아요

참석자 3 21:04
보안 토큰 가져와야 되지 않나요?

참석자 2 21:07
네 토큰 말씀하시는 건가요?

참석자 3 21:10
네 비밀번호 넣고

참석자 2 21:14
이게 제가 제가 잠시만요. 이거

참석자 1 21:21
이거 기능이 필요한지 한번 주욱 씨가 좀 판단을 해 주세요.
이건 저도 모르겠거든요.

참석자 2 21:26
근데 필요 없을 것 같습니다. 이게 처음에 멘토님이 주신 코드에 이제 멘토님 전화번호를 아이디로 입력하고 패스워드에 비게이브 AI 느낌표였나 그렇게 입력을 하면은 거기서부터 토큰이 발급이 됩니다.
API 토큰이 발급이 되는데 그거는 항상 고정돼 있어가지고 이제 그 토큰으로 여수랑 완도 1 완도 2 완도 공유 전부 다 접근 가능한 거라서 이거는 제가 봤을 때 필수적이다라고 생각은 안 들고

참석자 1 22:00
왜냐하면 민석 씨 이게 좀 컴팩트 해야 돼요. 이거 API가 네 그래서 이렇게 해서 하면 나중에 이게 실제 디바이스가 엄청 많아지고 할 때 좋은데 지금은 빼야 될 것 같거든요.

참석자 3 22:14
네 저는 그 보안 정보가 다를 수도 있다고 생각해서 또 나중에 센서를 추가할 수도 있으니까

참석자 2 22:22
네 네 좋습니다.

참석자 3 22:23
네 그러면 일단 이거는 안 한다고 보면 되겠죠.

참석자 1 22:27
네네네네 근데 이렇게 구상해보는 것 자체가 일단 도움이 많이 돼요.
ET 프로젝트 자체에 그래서 뺀다고 막 이게 너무 시무룩하실 필요는 없고요.

참석자 3 22:35
그런 건 아니고요.

참석자 1 22:37
넘어가시죠.

참석자 3 22:38
그러면 그냥 뭐 없는 센서면은 그냥 뭐 예외 처리하고 그런 식으로만 하면 되는

참석자 1 22:43
그렇죠. 그렇죠. 네

참석자 3 22:46
그러면 그냥 이거 아마 이거 두 개가 메인인데

참석자 3 22:59
그러면 일단 이거를 원래 등록해놓고 그 등록된 거에 대해서 다 요청한다고 분석 요청을 하는 거였는데 이거는 빼고 그러면 이거 두개 이것만 보면은 센서 아이디 주고 주면 조사 요청하면은 이제 모델에서 주어진 시점 기준으로 720개 돌려서 그거 바이오 파울링이다 아니다 이렇게 반환을 하는 걸로 했거든요.
그리고 요청하는 게 리퀘스트 바디에다가 그거 이거를 옵션으로 줘가지고 안 넣으면 그냥 최근 현재 시점에서 그냥 돌리고 넣으면 그 시점에서 2720개 해서 돌리고 이렇게

참석자 1 23:44
이거 정해야 되는데 우리가 이거 모니터링 시스템이니까 주기를 정하기로 했잖아요.
네 그러면은 최신 주기에 있는 그 결과값을 뱉어줄 건지

참석자 3 24:00
네

참석자 1 24:00
아니면은 방금 민석 씨 말씀하신 대로 현재 시점에서 뱉어줄 건지 이거 정해야 되거든요.

참석자 3 24:05
네

참석자 1 24:08
무슨 말인지 알겠죠.

참석자 3 24:09
그러니까 돌려놓고 저장해 놓은 걸 제일 최근 거 갖고 오는지 네

참석자 1 24:15
그렇게 할 건지 아니면은 그냥 다시 돌려서 뱉을 건지 이

참석자 3 24:21
근데 그게 밑에 거랑 좀 얘기가 중복되는 게 저희가 처음에 계획할 때 안에 결과를 저장하는 DB를 간단하게 해놓는다고 해서 약간 그래서 좀 애매한 부분이긴 한데 이거는 그냥 요청만 그러니까 분석하라는 요청하고 이게 응답으로 나올지는 아직 저도 확실하지가 않고 결과 조회가 따로 있거든요.
이거는 이제 그 결과 멘토님 아까 말씀하신 것처럼 최근 거 갖고 온다든지 아니면 시점 설정해서 갖고 온다든지 저장돼 있는 거

참석자 1 25:00
이게 죽이 그게 들어가니까 다 조금 애매해지네. 까다로워지는 일단은 현재 시점은 이제 새로 돌렸을 때 그냥 이제 그러니까 지금 계획대로 하고 그다음에 과거 조회를 할 거냐 그러니까 제가 생각했던 거는 어차피 이게 AI가 엄청 무거운 게 아니니까 시점을 넣어서 하면은 그냥 다시 추론하면 된다고 생각을 했거든요.

참석자 1 25:43
따로 따로 가는 게 좋을 것 같은데 왜냐하면 그러면은 과거 데이터 조회할 때 DB 기준으로 하면 뭐야 따로 그러니까 이걸 뭐라고 설명해야 되지

참석자 1 26:02
그러니까 그 주기의 DB가 종속적이잖아요.

참석자 3 26:07
네

참석자 1 26:08
그러니까 주기에 따라서 DB 그게 달라지니까 일자 했을 때도 로직 구현하는 게 복잡해질 것 같단 말이죠.
그래서 제 생각엔 저장은 해두되 그냥 일자 선정해가지고 돌리면은 그냥 이제 다시 새로 추론하는 게 좋을 것 같은데 보여줄 때는 오히려 그게 더 DB에서 호출해서 보여주는 게 더 복잡할 것 같거든요.

참석자 3 26:39
혹시 다시 설명해 주시

참석자 1 26:41
좀 정리를 해보자면은 그러니까 지금 여기에 적혀 있는 게 그거잖아요.
이제 딱 접속하면은 그 시점으로 이제 쏴주는 거잖아요.
결과를 그렇죠 네 근데 이제 과거 결과 조회하는 게 우리가 또 기능이 있잖아요.
일자 조회하는 거 거기서 DB를 만약에 조회를 한다고 하면 우리 주기 설정하는 거랑 꼬이니까 관리자 기능에 주기 넣고 뭐 하고 이런 거 넣자고 했잖아요.
처음에

참석자 3 27:19
근데 그러면 그 주기에 맞는 시점에 있는 거 일단 DB에서 찾아보고 없으면은 뭐 분석 요청하고 이러면 되지 않을까요?

참석자 1 27:28
그러니까 그게 오히려 더 나중에 개발이 복잡하다 이거죠.
제 말은 네 그래서 이거는 선택인데 여러분들이 선택하세요.
전 모르겠습니다. 이거는 그러니까 어떤 그러니까 두 가지 케이스가 있는데요.
첫 번째 케이스 같은 경우에는 이제 민석 씨가 말씀하신 대로 그냥 구현을 하는 거예요.
이제 처음 거는 그냥 현재 시점에서 불러서 하고 과거 거 할 때 로직 잘 조회해가지고 이제 없으면은 새로 불러서 하고 있으면은 있는 거 가져다 쓰고 이거잖아요.
근데 그것보다 저는 좀 간단하게 구현이 가능하다 싶은 거는 이제 그냥 다 새로 조회하고 DB는 따로 조회할 수 있도록만 해놓은

참석자 3 28:21
아 네네

참석자 1 28:23
어떤 것 같아요 두 개 중에

참석자 3 28:26
뒤에가 좀 구현은 더 쉬울 것 같은데 일단 저희끼리 얘기를 해봐야 될 것 같은

참석자 1 28:32
그리고 주기로 요청해서 없으면은 새로 하고 이게

참석자 3 28:38
네

참석자 1 28:39
조금 그러니까 그 시스템적으로 조금 뭔가 이제 안정성이라고 해야 되나 이걸 뭐라 해야 되지 그러니까

참석자 3 28:52
좀 일관적이지가 않아

참석자 1 28:54
일관성이 좀 떨어져요. 그러니까 시스템 이해하기가 어려워 시스템 복잡해져요.
알겠죠

참석자 3 28:59
네

참석자 1 29:00
그게 좀 단점

참석자 3 29:03
근데 그러 그러면 제가 제가 좀 궁금한 게 만약에 그냥 DB는 DB 나는데 그냥 저장만 하고 한 다음에 DB가 필요는 없는데 만약에 저희가 문서에다가는 DB를 썼잖아요.
그러면

참석자 1 29:21
그 DB가

참석자 3 29:22
DB를 꼭 구현해야 되는지

참석자 1 29:24
DB가 있으면 저는 좋다고 생각이 드는 게 과거에 어떻게 지금 잘 모니터링 되고 있는지 이런 거 볼 수 있잖아요.
그래서 그거 그래프 하나 프론트에다 하나 넣어주든지 언제 이상이 있었다.
그러니까 예를 들어서 에너지 이제 쭉 나와요. 그러니까 에너지가 아니라 그 뭐냐 그거

참석자 3 29:46
로그 했어. 네

참석자 1 29:48
용전 산소 수온이 용전산소 이렇게 그래프가 쭉 나와요.
그래서 그러면 그 DB 값이 있으니까 그걸 시각화를 할 수가 있잖아요.
그 DB 값을 가지고 이 구간에서는 예를 들어 한 일주일 정도 본다 치면은 그럼 다 정상일 수도 있고 그리고 아니면은 약간 의심되는 구간이 있다고 이렇게 DB의 값에 의해서 시각화를 할 수가 있잖아요.
그리고 저는 이 DB가 의미가 있다고 생각을 하는 게 과거에 어떻게 패턴이 나타났는지 이런 거 다 확인할 수 있으니까 전 괜찮은 것 같거든요.

참석자 1 30:31
그래서 일단은 이제 너무 어렵게 생각하지 말고 그냥 요청하면 AI가 추론해서 결과가 나온다.
무조건 그리고 DB는 따로 저장해 둔다. 그리고 그래프로 최근 일주일간 추이 이런 식이면 괜찮은 것 같은데

참석자 3 30:53
네네

참석자 1 30:56
혹시 이해 안 되면 바로 얘기해 주세요.

참석자 3 30:58
이거 만약에 근데 또 하다가 구체적으로 해보다가 또 궁금한 게 생길 수 있어서 그때 나중에 질문해 보겠습니다.

참석자 1 31:06
예 알겠습니다.

참석자 2 31:08
민수 님 제가 한 말씀드려도 될까요? 제가 이해한 거는 이제 예를 들어서 사용자가 서비스에 처음 들어왔을 때 만약 처음에 들어오면은 그 시점 기준으로 저는 이제 직전에 720개의 데이터를 돌린다 이렇게 생각하지 않았고

참석자 1 31:27
아 예

참석자 2 31:28
저는 그냥 주기마다만 돌아간다고 생각을 했거든요.
오히려 주기마다만 네 왜냐하면 이게 제가 코드 이거 실행시키는데 저는 간략하게 설명드리면은 넉넉하게 일단 오든 API에서 이틀치 데이터를 뽑아옵니다.
한 1500개 정도를 뽑아온 다음에 이제 그중에 교실 수가 있을 수 있으니까 그런 다음에 이제 모델 돌리는 코드인데 이것만 하더라도 리스펀스 타입이 한 1분 한 1분 정도 네 저는 한 1분 정도 걸리더라고요.

참석자 1 32:12
API 불러오는 시간이 있으니까

참석자 2 32:15
네 맞습니다. 그래가지고 사용자가 딱 처음 들어왔을 때 실시간으로 데이터 네 너무 오래 걸리고 과거 조회할 때도 이제 예를 들어서 이렇게 시간 설정해서 과거 그래프를 과거 데이터를 보고 싶은데 한 1분이나 걸리면은 좀 UX 관점에서 굉장히 안 좋잖아요.
그래서 실시간으로 하는 것보다 그냥 예를 들어서 멘토님이 말씀해 주신 대로 1시간 주기마다 쫙 저장해놓으면 DB 관리하기도 편할 거고 나중에 사용자가 과거 데이터 열람에도 바로 즉각적으로 대응할 수 있으니까 훨씬 좋을 것 같다는 생각이 들고 있습니다.

참석자 1 32:50
이거 아주 좋은 의견이고요. 그러니까 이게 애매하면 안 된다는 건데 그러면 주기로 갈 거면 그냥 주기만 해야 된다는 거죠.
이거를 섞으니까 이제 자꾸 이상해져서 저도 이걸 일관성 있게 하고 싶었던 건데 그러면은 앗살이 그냥 다 주기로 가고 그 주기를 너무 길게는 못 잡게 하는 게 좋을 것 같은데 제 생각에 그러면

참석자 2 33:14
그렇죠 네 좋습니다. 그럼 이건 어떠신가요? 1시간마다 그냥 서버에서 계속 돌리면서 저장을 하고

참석자 1 33:23
고정을 하죠. 이거 관리자 기능 만들고 이런 것도 복잡하겠네 그러면 그냥 1시간 네 좋습니다.
네 그러면 1시간 주기로 데이터 이제 이게 딱 실행이 되고 그 만약에 최근에 들어왔다 그러면 최근 DB 값 조회해가지고 시각화해 준다 맞죠?

참석자 3 33:43
네 그렇게 하면

참석자 1 33:45
네 맞습니다. 네 일단 그렇게 하고 정하고 넘어가죠.

참석자 3 33:48
그리고 나머지는 그냥 헬스체크랑 뭐 그런 거라서 더 얘기할 건 없는 것 같습니다.

참석자 1 33:58
제 생각보다는 구조화가 잘 돼 있어서 방금 논의할 때도 좀 깔끔하게 마무리가 지어진 것 같고요.
이렇게만 하면 되는데 조금 속도가 중요해요. 빨리 좀 돼야 여러분들도 아마 안심이 좀 될 거예요.
그래서 조금 신경 써주시고 개발 진행 속도만

참석자 3 34:18
혹시 저희 처음에 21일인가 22일인가 그렇게 잡았잖아요.
근데 그 최대로 늦게까지 하면 언제까지로 볼 수 있을까요?
기업체 에서는

참석자 1 34:30
그거는 없고 그냥

참석자 3 34:32
빨리 빨리 해 주세요. 죄송해요. 제가

참석자 1 34:37
일단 그러니까 22일인데 그러니까 오버 되는 거 어쩔 수 없잖아요.
여러분들 이게 이거 무슨 여기 회사 직원도 아니고 근데 이제 좀 제 사정이 있어가지고 조금 이제 그 뒤에 데드라인은 없다고 생각하시는 게

참석자 3 34:52
네 좋을 것 같습니22일은 무조건 넘을 것 같아서 그리고 이게 또 좀 다른 분도 완성이 돼야 제가 할 수 있는 것들도 있다 보니까

참석자 1 35:04
네네 좀 같이 해서 하시면 좋을 것 같고 일단은 주혁 씨가 지금 라인 잘 잡아놔서 그거 받아가지고 바로 작업하시면 될 것 같고요.

참석자 1 35:19
이런 거 할 때 조금 진짜 엉성하더라도 1차 초안을 빨리빨리 넘겨줘야 돼요.
주혁 씨 알겠죠 그러니까 알겠습니다. 다 완벽하게 넘고 넘어가고 하면 작업 못 해요.
지금도 약간 이것 때문에 딜레이가 된 게 보이거든요.
그래서 일단은 진짜 대충 하더라도 인풋 아웃풋 나오게만 IO 해가지고 보내고 그 뒤에 보완되면 보내고 보완되면 보내고 약간 이런 식이 좀 이상적이고요.

참석자 2 35:49
네 감사합니다.

참석자 1 35:51
그리고 프론트 엔드 된 거 확인하고 마무리할게요.
네

참석자 4 35:55
그러면 제가 프론트 엔드 진행 상황 공유드리겠습니다.

참석자 1 36:30
멈추셨는데 화면도 카메라도

참석자 3 36:35
끊기셨나 봐요.

참석자 1 36:37
어디 가셨지 잠깐 일정 좀 말씀드리면 29일까지는 그러면 어떻게 좀 이게 될까요?
근데 진짜 이거는 조금 빡세긴 하거든요. 저도 좀 빡세거든요.
이거 넘어가면

참석자 3 36:56
29일이면 넉넉한 것 같습니다.

참석자 1 36:58
네 그러면 29일까지 해 주시고요. 이거 넉넉하다고 말씀을 해주셨지만 쉽지 않을 거예요.
그래서 중간중간 의사결정할 거 있으면 제가 주말이나 어디 새벽에도 다 대답할 수 있으니까 그냥 무조건 빨리 슬랙으로 주시고 전화도 주세요.
그냥 빨리빨리 의사결정하고 또 모르는 부분 막히는 거 있다.
그냥 바로 저한테 그냥 다 물어보세요. 제가 좀 뚫어드릴게요.
그렇게 해야 이게 좀 진행이 빨리 될 것 같아서

참석자 4 37:29
오류 때문에 잠시 나갔다 들어왔는데 화면 보이시나요?

참석자 1 37:35
보인다 이거 이슈가 하나 있는데 그 피그마

참석자 4 37:40
네

참석자 1 37:41
링크로 공유하는 거 좀 자제하세요. 여러분들 링크 공유하다가 유료로 갑자기 계정 넘어가거든요.
그런가요? 그래서 되도록이면 스샷 같은 걸로 좀 가성비 있게 공유하시는 걸 추천드립니다.

참석자 4 37:56
알겠습니다. 일단은 오늘은 이렇게 저희가 원래 기존 화면 설계서에서는 이런 식으로 좀 없어 보이게 돼 있는데 저희가 민수 님이랑 저랑 저번에 토의를 한 결과 좀 리모델링을 했어요.
이런 식으로 그리고 이제 기존에 세로 스크롤로 디바이스 구역을 나누는 거 대신에 이제 이 한 화면에 디바이스 구역을 보여주고 가로 스크롤로 슬라이딩 할 수 있게 넘어가는 방식을 지금 생각 중이고요.

참석자 1 38:32
가로 스크롤이 어떻게 하는 거예요? 그러면

참석자 4 38:35
여기에서 이제 예를 들어서 사진 넘기는 것처럼 랭킹 쪽을 하면은 그런 식으로 그리고 로그인 화면이랑 회원 가입 화면은 거의 전이랑 바뀐 건 없고 지금 코드가 짜인 거는 이 화면 보이시나요?

참석자 1 38:59
네네

참석자 4 39:01
지금 로그인 지금

참석자 1 39:03
어드민 들어가 되나요? 이거 로그인

참석자 4 39:06
네 이거 지금 회원 가입도 만들어놨고 아까 전에 회원 가입으로 데이터베이스를 지금 그냥 CSV 파일로 그냥 일단 저장해 놨거든요.
예. 그래서 지금 지금은 되게 어둠

참석자 1 39:19
이 이거 넥스트인가요? 뭔가요? 이거

참석자 4 39:21
텍스트 JS

참석자 1 39:23
넥스트면 그거 몽고 DB로 하는 베이스 라인이 있을 텐데 CSB가 베이스 라인이었나요?
어떤 거 참고하셨어요?

참석자 4 39:33
아닙니다. 그냥 CSV 파일을 제가 데이터베이스 수업 중에 그냥 간단히 들은 거라서 그냥 CS 파일로 만든

참석자 1 39:42
그러면은 그러면

참석자 4 39:43
아까 전에 보셨던 이거랑 지금 틀을 CSS로 만들어놨고 그 외의 기능을 아직 여기에 합치지 못했는데 코드 내부 파일에는 이런 식으로 존재하거든요.
API를 가져와서 지금 이런 식으로 보여주는

참석자 1 40:08
예. 괜찮은데 약간 데시보드 한번 다시 가볼까요?
아니 그 피그마

참석자 1 40:25
이게 조금 단조롭긴 하거든요.

참석자 4 40:28
네

참석자 1 40:29
그래서 약간 데시보드에서 많이 쓰는 스타일 카드 이런 거 있는 데이터 카드 이런 거 있는데 어떻게 좀 반영하면 좋을까 통계 통계를 저런 식으로 통계 저쪽을

참석자 4 40:47
네 뭐야

참석자 1 40:49
이거 왼쪽 저거 좋아요. 저 왼쪽에 표 나오는 거 좋고 근데 우리 위움도 빼기로 하지 않았어요.

참석자 4 40:56
위험도를 로직 값으로 해서 하는 거를 빼기로 했었는데 근데 지금 일단 화면에 넣을 게 없어가지고 일단

참석자 1 41:08
일단은 그러면 위험도 말고 그냥 뭐야 됐다 안 됐다 이걸로 할까요?
그냥 뭐야 탐지 탐지 여부 AI 탐지 결과 이렇게 할까요?

참석자 4 41:20
네 알겠습니다.

참석자 1 41:21
그렇게 하고 저 통계 저런 식으로는 딱 봐도 그건데 디스크 라이브데 판타스 맞아요.
그렇게 이것보다는 뭐야 카드 데이터 카드라고 하나 프론트에서 카드라고 하는 게 있거든요.

참석자 4 41:41
네 카드 알고 있습니다.

참석자 1 41:43
알고 있죠 그걸로 한번 바꿔보세요. 예를 들어 수온 용존 산소 정도만 6개 딱딱딱딱딱딱 해가지고 평균 분산 이런 식으로 그러니까 근데 그 통계 어떤 통계값 보여줄 건지는 이상 탐지 관점에서 어떤 거 보여줄지는 한번 의사결정해보시고요.
분산 이런 것도 많이 하는 것 같던데 제가 듣기로는 그쪽에서

참석자 4 42:06
그거는 한번 확인해 보겠습니다.

참석자 1 42:08
한번 확인해 보시고 이렇게 하면 될 것 같은데요. 디자인을 조금 조금 더 약간

참석자 5 42:26
한번 바꿔볼까요?

참석자 1 42:28
조금 고도화를 그러니까 일단 이게 1차고 그러니까 이거 디자인하다가 또 완성 안 되면 안 되잖아요.
이제 요게 1차고 사실 시스템 통합하는 게 더 중요하긴 하거든요.
API로 받아가지고 막 이렇게 하는 거 네 그래서 그거를 바로 작업을 하세요.
아마 주혁 씨가 잘 알 거예요. 그 부분을

참석자 4 42:54
API로 받아와서 이제 데이터 그래프 표시라든가 이런 거

참석자 1 42:58
컨테이너 만들기 전에 민석 씨도 컨테이너 만들기 전에 프론트에서 테스트할 수 있는 1차를 먼저 주세요.
주혁 씨도 마찬가지고

참석자 4 43:12
그런 데도 있습니다.

참석자 4 43:18
제가 했던 것 중에 AI 발해가지고 했던 게 있는데

참석자 4 43:27
이게 화면이 이거 이거를 그 기간 설정해가지고 API 불러와서 바로바로 받아오는 그런 시스템도 만들었었는데

참석자 1 43:42
이거는 그럼 모든 API 그거랑 연동이 돼 있는 건가요?

참석자 4 43:46
네 지금 오돈 API 보안도랑 연결돼 있습니다.

참석자 1 43:49
근데 넥스트에서 민석 씨 얘기로는 바로 받아 뭐야 이거 얘기가 다 되는데요.

참석자 4 43:57
근데 이게 지금 디바이스 그러니까 API가 토큰도 없이 그냥 받아오는 거라서 이게 그대로 들어가면 안 될 것 같다.

참석자 1 44:08
토큰이 없는데 이게 받아 맞아요.

참석자 4 44:11
지금 완도에서 그냥 웹사이트 링크 그거로 받아오는 걸로 알고 있습니다.
완도는 여수는 토큰이 있어야지 받아가지고

참석자 1 44:21
그래요. 이건 제가 그쪽에 전달 이거는 그쪽 시스템 문제라서 어쨌든 이렇게는 안 될 것 같고 민석 씨 말씀하신 대로 백엔드 통해서 받아오는 걸로 하고 1차를 프론트한테 좀 빨리 넘겨줘야 프론트 엔드에서 통합을 하거든요.

참석자 3 44:35
네 그럼 제가 이 프록시 API 먼저 하는 걸로 알겠습니다.

참석자 1 44:40
API 받아가지고 그냥 간단하게 생각하세요. 이제 데이터 받아서 이제 보여줄 데이터 먼저 저쪽에 보내고 그다음에 AI 결과값 아니다.
아니지 다 DB로 싸야 되잖아 생각해 보니까 그러면은 프론트에서 바로 여기서 받는 게 맞고 그쵸 그다음에 백엔드에서 뭐야 그거 그거 해주게 DB에 쌓는 거 해줘야겠네.
그죠? 그 DB를 우리 DB에 쌓을 필요 없잖아요.
저 데이터를 그죠?

참석자 3 45:17
네 저거는 오든 거를 제가 대신 받아주는 API 해서 바로 주면 될 것 같습니다.

참석자 1 45:23
그렇게 오케이 어차피 저거는 영찬 씨 말씀하신 거는 완도 것만 받을 수 있었나 아무튼 그러니까

참석자 4 45:31
네 그래서 만약에 백엔드 쪽에서 보내는 것도 이거 이용하면 그냥 바로

참석자 1 45:35
받을 수 있을 그렇게 하면 될 것 같고요. 컴포넌트 어느 정도 제가 봤을 때 1차 드래프트 정도는 다 나온 것 같고요.
제 생각보다는 진행 속도 빠르거든요. 그래서 조금 걱정을 하긴 했는데 또 주혁 씨하고 다들 잘 이제 열심히 해주셔서 29일까지는 될 것 같은데요.
22일은 좀 무리인 것 같고

참석자 1 46:07
네 뭐 이렇게 마무리하면 될 것 같은데 또 혹시 이슈 있으시면 말씀해 주세요.

참석자 5 46:17
혹시 그 피그마 메인 그래프에 그럼 뭘 써야 될까요?

참석자 1 46:22
그거 디스크 라이브 빼고 카드 넣고요. 네 그다음에 그 그래프 쪽은 일단은 그래 삼총사 있잖아 그래프 사명제 저거 저거 조금 다른 그래프가 들어가면은 좀 다채로워 보이기는 할 것 같거든요.

참석자 5 46:47
소원이나 그런 거 말씀하시는 건가요? 아니면

참석자 1 46:50
일단 일단은 수온은 넣어야 될 것. 수온이 왜 빠졌는지 모르겠는데 수온은 일단 들어가야 될 것 같고요.
이게 그걸로 했네. 이제

참석자 4 47:00
광학생 수업의

참석자 1 47:01
맞죠 일단은 용조 산소 가장 왼쪽으로 빼고

참석자 1 47:12
조금 그런 거 없나 타임 시리즈 중에 조금 약간 뭐 약간 박스 플롯 이런 거 해야 되나

참석자 1 47:25
저거 바이오 파울링 위험도 저것도 이거 저 세 개를 바꾸지 말고 저 위험도 어차피 빼야 되잖아요.
저거 네 저거 빼고 뭐 넣을지 한번 생각해 보세요. 저 3총사 놔두고

참석자 5 47:39
광학 센서는 앞두고

참석자 1 47:41
저 위에를 조금 좀 팬시한 걸로 조금 약간 멋있는 걸로 저도 잘 모르겠어.
제가 다 모든 걸 알고 있는 신 그런 건 아니잖아요. 그러니까 여러분들이 조금 이렇게 좀 해 주십시오.
좀 페지한 거 한번 찾아주십시오. 어떻게 하면 좋을지 그러니까 막 그런 거 있잖아요.
막 엄청 위험하다. 저도 잘 모르겠는데 아니면 제가 말씀드린 대로 그러면 이건 어때요?
용존산소 그래프를 저렇게 쭉 깔아요. 위에 크게

참석자 5 48:16
이걸 이쪽으로 옮긴다고

참석자 1 48:17
쭉 까는데 지금 왼쪽에 보면은 언제가 이상 탐지가 되었고 안 되었고 나오잖아요.

참석자 5 48:23
아 네

참석자 1 48:24
그거 시각화해 주는 거 메인에다가 왠지 괜찮은 것 같죠?
네 그리고 그 밑에다가 3.4 세로 하나 해가지고 깔든지 아니면 염도 전기도 두 개로 그 레이아웃은 생각을 해보시고

참석자 5 48:44
이 정도 내용이면 충분할까 아니면 좀 내용을 더 넣어야

참석자 1 48:47
딱딱 딱 적당해요. 딱 적당한데 조금 더 멋있었으면 좋겠어요.
그러니까 이게 이게 디자인

참석자 5 48:54
뭔 말씀인지 알 것 같아요. 약간 원형 그래프랑 약간 이제 원형 그래프랑 약간 히스토그램 그런 거 말씀하시는 건가요?

참석자 1 49:00
아니 저도 모르겠어요. 그러니까 제 생각에 메인에는 용준 선수 시계 그래프 저것처럼 쭉 나오고 구간별로 정상인지 비정상인지 그거 표시해 주는 거 그게 메인으로 들어가고 밑에 3개는 밑에 세 개를 그래프를 조금 색다른 모르겠네.
이거는 그냥 고민해 보세요.

참석자 1 49:29
그리고 통계죠 카드로 바 그 정도 그 정도면 아주 충분 이건 놔둬도 될까요?
저 왼쪽 거요. 네 저거는 그걸로 바꾸면 되잖아. 이상 탐지됐는지 안 됐는지

참석자 4 49:48
그 위험도를 결과

참석자 1 49:51
AI 탐지 결과 이렇게 하면 되죠. 네 알겠습니다.
이거 제가 디자인으로는 지금 조언을 못하겠어요.
죄송해. 그냥 알아서 한번 해봐요. 미안합니다.
제가 디자인 전문가도 아니라 가지고 사실 저도 AI 쪽만 그러니까 사실 제가 주격시 하는 부분만 좀 거의 전문가고 나머지 저도 잘 모르거든요.
조금 다른 부분들한테 제가 부분에서 막 멘토를 드릴 말씀이 없는데 일단 제가 아는 선에 있어서는 그렇게 말씀드릴 수가 있을 것 같습니다.

참석자 5 50:31
네 알겠습니다.

참석자 1 50:33
사실 DB나 이런 건 잘 몰라

참석자 4 50:42
포인터도 모금까지인 것 같습니다.

참석자 1 50:45
그러면은 이제 그렇게 정리하면 될 것 같고요. 추가로 필요하신 거 있으면 언제든지 연락 주세요.
제가 주말에도 다 답장 드리거든요. 다들 고생이 많으십니다.
이거 왜 이렇게 볼륨이 하다 보니까 이거 논문 쓰는 것 때문에 확 커진 것 같은데 다들 고생이 많으십니다.
이거 그냥 개발까지 했으면 여러분도 할 만했을 텐데 개발 안 할 수도 없고 이거 아무튼 마지막까지 해 주시면 감사하겠고요.
제가 회사 그만뒀다고 한 번 말씀드린 적이 있는데 12월에 또 바로 이직하거든요.
그래서 조금 바빠질 수도 있습니다. 12월부터

참석자 1 51:33
네 어찌 됐든 다들 열심히 참여해 주셔서 너무 감사드리고요.
마무리하면 될 것 같습니다.

참석자 2 51:41
네 고생하셨습니다.

참석자 1 51:43
수고하셨습니다.

참석자 2 51:45
네 감사합니다.


clovanote.naver.com