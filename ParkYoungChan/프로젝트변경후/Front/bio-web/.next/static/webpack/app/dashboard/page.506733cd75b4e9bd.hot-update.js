"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./app/api/fetchData.ts":
/*!******************************!*\
  !*** ./app/api/fetchData.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchData: () => (/* binding */ fetchData)\n/* harmony export */ });\n// app/api/fetchData.ts\nasync function fetchData(device_id, value, day) {\n    const baseUrl = 'https://rojy53nt54.execute-api.ap-northeast-2.amazonaws.com/Prod/';\n    const oneDayAgo = day - 24 * 60 * 60 * 1000;\n    // 최종 URL 생성\n    const url = \"\".concat(baseUrl, \"/devices/\").concat(device_id, \"/sensors/\").concat(value, \"?b_time=\").concat(oneDayAgo, \"&a_time=\").concat(day, \"&size=10000\");\n    // Fetch 요청\n    const response = await fetch(url);\n    return await response.json();\n} // // 토큰 가져오기\n // export async function fetchData() {\n //   const url = 'https://auth.odn.us/auth/login';\n //   const data = new URLSearchParams({\n //     username: '01084837725',\n //     password: '!Bigwave1234',\n //   });\n //   fetch(url, {\n //     method: 'POST',\n //     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n //     body: data,\n //   })\n //     .then((response) => {\n //       if (!response.ok) {\n //         throw new Error('Failed to fetch data');\n //       }\n //       return response.json();\n //     })\n //     .then((data) => console.log(data))\n //     .then((error) => console.log(error));\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9hcGkvZmV0Y2hEYXRhLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx1QkFBdUI7QUFDaEIsZUFBZUEsVUFBVUMsU0FBaUIsRUFBRUMsS0FBYSxFQUFFQyxHQUFXO0lBQzNFLE1BQU1DLFVBQVU7SUFDaEIsTUFBTUMsWUFBWUYsTUFBTSxLQUFLLEtBQUssS0FBSztJQUN2QyxZQUFZO0lBQ1osTUFBTUcsTUFBTSxHQUFzQkwsT0FBbkJHLFNBQVEsYUFBZ0NGLE9BQXJCRCxXQUFVLGFBQTJCSSxPQUFoQkgsT0FBTSxZQUE4QkMsT0FBcEJFLFdBQVUsWUFBYyxPQUFKRixLQUFJO0lBRS9GLFdBQVc7SUFDWCxNQUFNSSxXQUFXLE1BQU1DLE1BQU1GO0lBRTdCLE9BQU8sTUFBTUMsU0FBU0UsSUFBSTtBQUM1QixFQUVBLGFBQWE7Q0FDYixzQ0FBc0M7Q0FDdEMsa0RBQWtEO0NBQ2xELHVDQUF1QztDQUN2QywrQkFBK0I7Q0FDL0IsZ0NBQWdDO0NBQ2hDLFFBQVE7Q0FFUixpQkFBaUI7Q0FDakIsc0JBQXNCO0NBQ3RCLHdFQUF3RTtDQUN4RSxrQkFBa0I7Q0FDbEIsT0FBTztDQUNQLDRCQUE0QjtDQUM1Qiw0QkFBNEI7Q0FDNUIsbURBQW1EO0NBQ25ELFVBQVU7Q0FDVixnQ0FBZ0M7Q0FDaEMsU0FBUztDQUNULHlDQUF5QztDQUN6Qyw0Q0FBNEM7Q0FDNUMsSUFBSSIsInNvdXJjZXMiOlsiL2hvbWUveW91bmdjaGFuL0RvY3VtZW50cy9iaW8td2ViL2FwcC9hcGkvZmV0Y2hEYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFwcC9hcGkvZmV0Y2hEYXRhLnRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKGRldmljZV9pZDogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCBkYXk6IG51bWJlcikge1xuICBjb25zdCBiYXNlVXJsID0gJ2h0dHBzOi8vcm9qeTUzbnQ1NC5leGVjdXRlLWFwaS5hcC1ub3J0aGVhc3QtMi5hbWF6b25hd3MuY29tL1Byb2QvJztcbiAgY29uc3Qgb25lRGF5QWdvID0gZGF5IC0gMjQgKiA2MCAqIDYwICogMTAwMDtcbiAgLy8g7LWc7KKFIFVSTCDsg53shLFcbiAgY29uc3QgdXJsID0gYCR7YmFzZVVybH0vZGV2aWNlcy8ke2RldmljZV9pZH0vc2Vuc29ycy8ke3ZhbHVlfT9iX3RpbWU9JHtvbmVEYXlBZ299JmFfdGltZT0ke2RheX0mc2l6ZT0xMDAwMGA7XG5cbiAgLy8gRmV0Y2gg7JqU7LKtXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcblxuICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xufVxuXG4vLyAvLyDthqDtgbAg6rCA7KC47Jik6riwXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKCkge1xuLy8gICBjb25zdCB1cmwgPSAnaHR0cHM6Ly9hdXRoLm9kbi51cy9hdXRoL2xvZ2luJztcbi8vICAgY29uc3QgZGF0YSA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuLy8gICAgIHVzZXJuYW1lOiAnMDEwODQ4Mzc3MjUnLFxuLy8gICAgIHBhc3N3b3JkOiAnIUJpZ3dhdmUxMjM0Jyxcbi8vICAgfSk7XG5cbi8vICAgZmV0Y2godXJsLCB7XG4vLyAgICAgbWV0aG9kOiAnUE9TVCcsXG4vLyAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcgfSxcbi8vICAgICBib2R5OiBkYXRhLFxuLy8gICB9KVxuLy8gICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuLy8gICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuLy8gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBkYXRhJyk7XG4vLyAgICAgICB9XG4vLyAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuLy8gICAgIH0pXG4vLyAgICAgLnRoZW4oKGRhdGEpID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuLy8gICAgIC50aGVuKChlcnJvcikgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcbi8vIH1cbiJdLCJuYW1lcyI6WyJmZXRjaERhdGEiLCJkZXZpY2VfaWQiLCJ2YWx1ZSIsImRheSIsImJhc2VVcmwiLCJvbmVEYXlBZ28iLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwianNvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/api/fetchData.ts\n"));

/***/ })

});